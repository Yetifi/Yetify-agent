# Docker Compose for Production Environment
version: '3.8'

services:
  # MongoDB for Production
  yetify-mongodb:
    image: mongo:7.0
    container_name: yetify-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=yetify
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
      - ./scripts/mongo-init-prod.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./scripts/mongod.conf:/etc/mongod.conf:ro
    networks:
      - yetify-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["mongod", "--config", "/etc/mongod.conf"]
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Redis for Production
  yetify-redis:
    image: redis:7.2-alpine
    container_name: yetify-redis
    ports:
      - "6379:6379"
    command: >
      redis-server
      --appendonly yes
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis-data:/data
    networks:
      - yetify-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # MongoDB Backup Service
  mongodb-backup:
    image: mongo:7.0
    container_name: yetify-mongodb-backup
    environment:
      - MONGODB_URI=mongodb://yetify-mongodb:27017/yetify
      - BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
      - BACKUP_RETENTION_DAYS=30
    volumes:
      - mongodb-backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    depends_on:
      - yetify-mongodb
    networks:
      - yetify-network
    restart: unless-stopped
    command: ["sh", "-c", "while true; do /backup.sh; sleep 86400; done"]
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # MongoDB Monitoring
  mongodb-exporter:
    image: percona/mongodb_exporter:latest
    container_name: yetify-mongodb-exporter
    ports:
      - "9216:9216"
    environment:
      - MONGODB_URI=mongodb://yetify-mongodb:27017/yetify
    depends_on:
      - yetify-mongodb
    networks:
      - yetify-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

# Named volumes for persistent data
volumes:
  mongodb-data:
    driver: local
  mongodb-config:
    driver: local
  mongodb-backups:
    driver: local
  redis-data:
    driver: local

# Custom network for service communication
networks:
  yetify-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    attachable: true
